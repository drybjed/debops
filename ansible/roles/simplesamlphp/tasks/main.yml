---
# Copyright (C) 2020      CipherMail B.V. <https://www.ciphermail.com/>
# Copyright (C) 2021      Maciej Delmanowski <drybjed@gmail.com>
# Copyright (C) 2020-2021 DebOps <https://debops.org/>
# SPDX-License-Identifier: GPL-3.0-or-later

- name: Import custom Ansible plugins
  import_role:
    name: 'ansible_plugins'

- name: Import DebOps global handlers
  import_role:
    name: 'global_handlers'

- include_tasks: init_mariadb.yml
  when: simplesamlphp__mariadb

- name: Install Debian packages
  package:
    name: '{{ (simplesamlphp__base_packages + simplesamlphp__packages)|flatten }}'
    state: 'present'
  register: simplesamlphp__register_packages
  until: simplesamlphp__register_packages is succeeded

- name: Create UNIX group for SimpleSAMLphp
  group:
    name: '{{ simplesamlphp__group }}'
    system: True

- name: Create UNIX account for SimpleSAMLphp
  user:
    name: '{{ simplesamlphp__user }}'
    group: '{{ simplesamlphp__group }}'
    system: True
    home: '{{ simplesamlphp__home }}'
    shell: '{{ simplesamlphp__shell }}'

- name: Install SimpleSAMLphp from upstream
  when: simplesamlphp__upstream|bool
  block:

    - name: Create required directories
      file:
        path: '{{ item.path }}'
        state: 'directory'
        owner: '{{ item.owner | d(simplesamlphp__user) }}'
        group: '{{ item.group | d(simplesamlphp__group) }}'
        mode: '{{ item.mode   | d("0755") }}'
      loop:
        - { path: '{{ simplesamlphp__src }}' }
        - { path: '{{ simplesamlphp__upstream_git_dir  | dirname }}', mode: "0750" }
        - { path: '{{ simplesamlphp__upstream_git_dest | dirname }}' }
        - { path: '{{ simplesamlphp__data_path | dirname }}', owner: 'root', group: 'root', mode: '0755' }
        - { path: '{{ simplesamlphp__data_path }}', owner: 'root', mode: '0730' }
        - { path: '{{ simplesamlphp__log_path }}',  owner: 'root', mode: '0730' }

    - name: Clone SimpleSAMLphp source from upstream repository
      git:
        repo: '{{ simplesamlphp__upstream_git_repo }}'
        dest: '{{ simplesamlphp__upstream_git_dest }}'
        version: '{{ simplesamlphp__upstream_git_version }}'
        separate_git_dir: '{{ simplesamlphp__upstream_git_dir }}'
        verify_commit: True
        # FIXME: At the moment GPG whitelisting does not work correctly
        #gpg_whitelist: '{{ [ simplesamlphp__git_gpg_key ] }}'
      become: True
      become_user: '{{ simplesamlphp__user }}'
      notify: [ 'Refresh host facts' ]
      register: simplesamlphp__register_git
      until: simplesamlphp__register_git is succeeded

    - name: Install upstream PHP dependencies
      composer:
        command: 'install'
        working_dir: '{{ simplesamlphp__upstream_git_dest }}'
      become: True
      become_user: '{{ simplesamlphp__user }}'
      register: simplesamlphp__register_upstream_composer
      until: simplesamlphp__register_upstream_composer is succeeded
      when: simplesamlphp__register_git is changed

    - name: Install upstream NodeJS dependencies
      npm:
        path: '{{ simplesamlphp__upstream_git_dest }}'
      become: True
      become_user: '{{ simplesamlphp__user }}'
      register: simplesamlphp__register_upstream_npm
      until: simplesamlphp__register_upstream_npm is succeeded
      when: simplesamlphp__register_git is changed

    - name: Build NodeJS assets for upstream installation
      command: 'npm run build'
      args:
        chdir: '{{ simplesamlphp__upstream_git_dest }}'
      become: True
      become_user: '{{ simplesamlphp__user }}'
      when: simplesamlphp__register_upstream_npm is changed

    # The 'npm install' command modifies the comitted 'package-lock.json' file,
    # which prevents subsequent Ansible runs due to repository having
    # modifcations. Since we are sticking to a specific git tag, we can roll
    # back the changes which will not affect anything as long as the checked
    # out tag stays the same.
    - name: Check out changed package-lock.json
      command: 'git checkout package-lock.json'  # noqa command-instead-of-module
      args:
        chdir: '{{ simplesamlphp__upstream_git_dest }}'
      become: True
      become_user: '{{ simplesamlphp__user }}'
      when: simplesamlphp__register_upstream_npm is changed

- name: Update permissions on Debian-based installation
  when: not simplesamlphp__upstream|bool
  block:

    - name: Update secret file permissions
      file:
        path: '/var/lib/simplesamlphp/secrets.inc.php'
        group: '{{ simplesamlphp__group }}'
        mode: '0640'
        state: 'file'

    - name: Get list of dpkg-stateoverride paths
      shell: "set -o nounset -o pipefail -o errexit && dpkg-statoverride --list | awk '{print $4}'"
      args:
        executable: 'bash'
      register: simplesamlphp__register_statoverride
      changed_when: False
      check_mode: False

    - name: Update directory permissions
      command: 'dpkg-statoverride --update --add root {{ simplesamlphp__group }} 730 {{ item }}'
      loop: [ '{{ simplesamlphp__data_path }}', '{{ simplesamlphp__log_path }}' ]
      when: item not in simplesamlphp__register_statoverride.stdout_lines

- name: Make sure Ansible local facts directory exists
  file:
    dest: '/etc/ansible/facts.d'
    state: 'directory'
    mode: '0755'

- name: Configure SimpleSAMLphp local facts
  template:
    src: 'etc/ansible/facts.d/simplesamlphp.fact.j2'
    dest: '/etc/ansible/facts.d/simplesamlphp.fact'
    mode: '0755'
  notify: [ 'Refresh host facts' ]

- name: Refresh host facts when needed
  meta: 'flush_handlers'

- name: Manage SimpleSAMLphp configuration file diversions
  dpkg_divert:
    path: '{{ (item.config_path | d(simplesamlphp__config_path)) + "/" + (item.filename | d(item.name)) }}'
    divert: '{{ (item.config_path | d(simplesamlphp__config_path)) + "/" + ((item.filename | d(item.name)) | regex_replace("\.php$", ".dpkg-divert.php")) }}'
    state: '{{ "present" if (item.state|d("present") not in [ "absent", "ignore" ]) else "absent" }}'
    delete: True
  loop: '{{ q("flattened", simplesamlphp__combined_configuration) | parse_kv_items }}'
  loop_control:
    label: '{{ {"name": (item.filename | d(item.name)), "state": item.state|d("present") } }}'
  when: (not simplesamlphp__upstream|bool and ansible_pkg_mgr == 'apt' and
         item.state|d('present') not in [ 'absent', 'init', 'ignore' ] and
         (item.divert|d())|bool)
  tags: [ 'role::simplesamlphp:config' ]

- name: Remove SimpleSAMLphp configuration files when requested
  file:
    path: '{{ (item.config_path | d(simplesamlphp__config_path)) + "/" + (item.filename | d(item.name)) }}'
    state: 'absent'
  loop: '{{ q("flattened", simplesamlphp__combined_configuration) | parse_kv_items }}'
  loop_control:
    label: '{{ {"name": (item.filename | d(item.name)), "state": item.state|d("present") } }}'
  when: item.state|d('present') == 'absent' and not (item.divert|d())|bool
  tags: [ 'role::simplesamlphp:config' ]

- name: Generate SimpleSAMLphp configuration files
  template:
    src: 'etc/simplesamlphp/template.php.j2'
    dest: '{{ (item.config_path | d(simplesamlphp__config_path)) + "/" + (item.filename | d(item.name)) }}'
    owner: 'root'
    group: '{{ simplesamlphp__group }}'
    mode: '{{ item.mode | d("0640") }}'
  loop: '{{ q("flattened", simplesamlphp__combined_configuration) | parse_kv_items }}'
  loop_control:
    label: '{{ {"name": (item.filename | d(item.name)), "state": item.state|d("present") } }}'
  when: item.state|d('present') not in [ 'absent', 'init', 'ignore' ]
  tags: [ 'role::simplesamlphp:config' ]

- name: Remove modules with Composer
  composer:
    command: 'remove'
    arguments: '{{ item.name }}'
    working_dir: '{{ simplesamlphp__www }}'
  become: True
  become_user: '{{ simplesamlphp__user }}'
  when: item.state|d("present") == "absent"
  loop: '{{ simplesamlphp__modules }}'

- name: Install modules with Composer
  composer:
    command: 'require'
    arguments: '{{ item.name + " " + item.version|d() }}'
    working_dir: '{{ simplesamlphp__www }}'
  become: True
  become_user: '{{ simplesamlphp__user }}'
  when: item.state|d("present") == "present"
  loop: '{{ simplesamlphp__modules }}'

- name: Configure SimpleSAMLphp
  template:
    src: '{{ item }}.j2'
    dest: '{{ simplesamlphp__www + "/" + item }}'
    owner: '{{ simplesamlphp__user }}'
    group: '{{ simplesamlphp__group }}'
    mode: '0600'
  no_log: '{{ secret__no_log|d(True) }}'
  with_items:
    - 'config/authsources.php'
    - 'config/config.php'
    - 'config/module_webauthn.php'
    - 'metadata/saml20-idp-hosted.php'
    - 'metadata/saml20-sp-remote.php'
